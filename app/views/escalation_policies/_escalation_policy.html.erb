<% ep = escalation_policy %>
<tr class="policy">
  <td class="name">
    <strong>
      <%= link_to ep.name, '#', class: 'editable', data: { type: 'text', pk: ep.id, name: 'name', model: 'escalation_policy', url: escalation_policy_path(ep) } %>
    </strong>
  </td>
  <td class="loop_limit">
    <%= link_to "Loop #{pluralize(ep.escalation_loop_limit, 'time')}", "#", class: 'editable', 
        data: { value: ep.escalation_loop_limit, url: escalation_policy_path(ep), name: 'escalation_loop_limit', model: 'escalation_policy' } %>
  </td>
  <td class="rules"></td>
  <td class="controls">
    <div class="btn-group pull-right">
      <%= link_to '#', class: 'add-rule btn btn-primary' do %>
        <i class="icon-plus"></i>
      <% end %>
      <%= link_to escalation_policy, class: 'delete-policy btn btn-danger', remote: true, method: :delete do %>
        <i class="icon-trash"></i>
      <% end %>
    </div>
  </td>
</tr>

<!-- %tr.policy
  %td.name
    %strong= link_to escalation_policy.name, data: { type: 'text', pk: escalation_policy.id }
  %td.timeout= raw "Loop #{best_in_place(escalation_policy, :escalation_loop_limit).html_safe} times before giving up."
  %td.rules
    - if escalation_policy.escalation_rules.any?
      %ol
        - escalation_policy.escalation_rules.each do |rule|
          %li
            = "Assign to #{rule.assignable_type.downcase} #{rule.assignable.name}."
            - if rule.escalation_timeout?
              %em.small.muted= " Escalate after #{pluralize(rule.escalation_timeout, 'minute')}."
    - else
      %ul.unstyled
        %li
          %em.small.muted No rules for this policy.
  %td.controls
    .btn-group.pull-right
      = link_to '#', class: 'add-rule btn btn-primary', remote: true do
        %i.icon-plus
      = link_to '#', class: 'edit-policy btn' do
        %i.icon-pencil
      = link_to escalation_policy, class: 'delete-policy btn btn-danger', method: :delete, remote: true do
        %i.icon-trash -->